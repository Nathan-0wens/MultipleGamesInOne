//Date in day/month/year format for newest update: 3/09/2024
using MultipleGames;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using static System.Net.Mime.MediaTypeNames;
#pragma warning disable CS8600 // Converting null literal or possible null value to non-nullable type.

namespace Games_CSharp
{
    //Single Pile Nim Code
    internal class MultipleGames
    {

        public static void Main(string[] Games)
        {
            // Rooms for Zookkooz
            Room startingPoint = new("Entry Way", "You realize you are stuck in a game and need something and then to say victory to win. Looking around you see that you \n are in a lovely marble enterance to the Library");
            Room r1 = new("Field", "Lovely Place to Be");
            Room r2 = new("Elm Stree", "Its Scary");
            Room r3 = new("House", "It is tiny and white and there is an open window so you can enter the house");
            Room r4 = new("School", "There are a lot of textbooks and a window that you can't get through");
            Room r5 = new("Darkness???", "You could swear that it was still daytime, yet there is not a speck of light.");
            Room r6 = new("Chicken???", "In a massive open area you see a random chicken");
            Room r7 = new("Treehouse", "There is no way to enter it, but it looks neat.");
            Room r8 = new("Beach", "It is very sandy, and the water looks undrinkable");
            Room r9 = new("Restaurant", "No one is here, yet you can see tons of tasty free pizza. Though eating too much pizza could kill you, you are still very hungry.");
            Room r10 = new("Inside the house", "You can see nothing except for the window you entered through.");
            Room r11 = new("Another School???", "There is one window that you can't get through and tons of school supplies inside.");
            Room r12 = new("Light?", "There is so much light it is blinding and you can't se anything.");
            Room r13 = new("Cave", "You see a cave north of your position, but the ground leading up that way is impassable");
            Room r14 = new("Massive Tree", "The tree is huge, and it looks like it could walk but it is sleeping, luckily the gound is impassable North so you are safe.");
            Room r15 = new("Bridge to nowhere", "There is just a random bridge here that goes into the air and ends in the air, so you won't get across anything just most likely mess up and die. Also, you can't go around it due to the impassable terrain.");
            Room r16 = new("Teleporter", "You see a teleporter with a sign near it saying (teleport), but you don't know where it goes or if it is a trap.");

            //items for Zookkooz
            bool chicken = false;
            bool pizza = false;

            //Things to kill you in Zookooz
            int pizzaeaten = 0;
            int countMistakes = 0;

            //Keeps track of where you are in Zookooz
            int x = 0;
            int y = 0;
            int a = 0;

            //W is Wins and L is Losses
            int W = 0;
            int L = 0;

            //Used to find which game to play
            string gamenumber = "";

            //Keeps trak of death counts in games where you die
            int death = 0;

            //Explains how to play and what to say to play
            Console.WriteLine("Type in Score to see your score.");
            Console.WriteLine("Which game do you want to play? Your options are Single Pile Nim, Multiple Pile Nim, or Zookkooz, please type in the \n full name correctly.");
            //Starts the game
            while (true)
            {
                gamenumber = Console.ReadLine();
                if (gamenumber == "help" || gamenumber == "Help" || gamenumber == "HELP")
                {
                    Console.WriteLine("Type in Score to see your score.");
                    Console.WriteLine("Which game do you want to play? Your options are Single Pile Nim, Multiple Pile Nim, or Zookkooz, please type in the \n full name correctly.");
                }
                else if (gamenumber == "Number Guessing Game")
                {        
        if(userInput.nextLine().equalsIgnoreCase("y") || userInput.nextLine().equalsIgnoreCase("yes"))
        {
            boolean w = true;
            int x = 10;
            int y = 0;
            int z = 0;
            Random ran = new();
            int guess;
            int number = ran.nextInt(0, 100);
            while(x > 0)
            {
                w = true;
                while (w = true)
                {
                    Console.WriteLine("Guess an integer between 1-100");
                    try
                    {
                        guess = Console.ReadLine();
                        if (guess == number)
                        {
                            Console.WriteLine("You win! The number was: " + number);
                            y++;
                            x--;
                            break;
                        }
                        else if (guess == 9999)
                        {
                            x--;
                            z++;
                            w = false;
                            break;
                        }
                        else if (guess < 1 || guess > 100 && guess != 9999)
                        {
                            x--;
                            Console.WriteLine("Out of range");
                        }
                        else if ( guess > number)
                        {
                            x--;
                            Console.WriteLine("Too high");
                        }
                        else if (guess < number)
                        {
                            Console.WriteLine("Too low"); 
                            x--;
                        }
                        if(x < 0)
                        {
                            w = false;
                        }
                    }
                    catch(Exception SomethingUnexpected)
                    {
                        x = -100;
                        w = false;
                    }
                }
                if (y > 0 && x >= 0)
                {
                    Console.WriteLine("Would you like to play again? Yes or No");
                    if(userInput.nextLine().equalsIgnoreCase("yes") ||userInput.nextLine().equalsIgnoreCase("y"))
                    {
                        x = 10;
                    }
                }
                else if (x < 0)
                {
                    Console.WriteLine("Too many guess, you loose");
                    Console.WriteLine("Would you like to play again? Yes or No");
                    if(userInput.nextLine().equalsIgnoreCase("yes") ||userInput.nextLine().equalsIgnoreCase("y"))
                    {
                        x = 10;
                    }
                    if(userInput.nextLine().equalsIgnoreCase("no") ||userInput.nextLine().equalsIgnoreCase("n"))
                    {
                        x = -100;
                    }
                }
            }
                else if (gamenumber == "Single Pile Nim")
                {
                    //Piles and taking from them
                    Random ran = new();
                    int currentNum = ran.Next(10, 50);
                    int takeAmount = 0;
                    int maxTake;

                    //Winning and game ending
                    int whoseTurn = 1;
                    bool gameIsOver;
                    bool gameLoop = true;
                    bool validInput;


                    // Main Game Loop
                    if (gameLoop == true)
                    {
                        // Setup
                        maxTake = Math.Min(3, currentNum);
                        gameIsOver = false;

                        Console.WriteLine("Single Pile NIM\n---------------\n");
                        Console.WriteLine("There are {0} tokens left", currentNum);
                        //Session Loop
                        while (!gameIsOver)
                        {
                            // Player's Turn
                            validInput = false;
                            whoseTurn = 1;
                            if (!validInput)
                            {
                                //Get an integer
                                while (true)
                                {
                                    Console.WriteLine("Remaining total is: {0}", currentNum);
                                    Console.WriteLine("How much will you take (1-{0})?", maxTake);
                                    bool success = int.TryParse(Console.ReadLine(), out takeAmount);

                                    if (success)
                                    {
                                        break;
                                    }
                                    else
                                    {
                                        Console.WriteLine("Invalid amount!\n or invalid Game!");
                                    }
                                }

                                // Check to see if input is within the valid range
                                if (takeAmount > 0 && takeAmount <= maxTake)
                                {
                                    validInput = true;
                                }
                                else
                                {
                                    Console.WriteLine("Invalid amount!\n");
                                }
                            }

                            Console.WriteLine("You took {0}.\n", takeAmount);
                            currentNum -= takeAmount;

                            if (currentNum <= 0)
                            {
                                gameIsOver = true;
                            }
                            else
                            {
                                //Computer's turn
                                whoseTurn = 2;
                                if (currentNum > 1)
                                {
                                    int pie = currentNum + 3;
                                    if (pie % 4 == 0)
                                    {
                                        takeAmount = ran.Next(1, 3);
                                    }
                                    else
                                    {
                                        takeAmount = Math.Min(pie % 4, currentNum - 1);
                                        Console.WriteLine("I will take {0}.\n", takeAmount);
                                    }
                                }
                                else
                                {
                                    takeAmount = 1;
                                    Console.WriteLine("I will take {0}.\n", takeAmount);
                                }
                                currentNum -= takeAmount;

                                if (currentNum <= 0)
                                {
                                    gameIsOver = true;
                                }
                            }
                        }

                        // Determine the winner
                        if (whoseTurn == 1)
                        {
                            Console.WriteLine("I win, You lose.");
                            Console.WriteLine("Please pick a new game, Zookkooz, Single Pile Nim, Multiple Pile Nim, or see your Score.");
                            L++;
                        }

                        else
                        {
                            Console.WriteLine("You win, I lose.");
                            Console.WriteLine("Please pick a new game, Zookkooz, Single Pile Nim, Multiple Pile Nim, or see your Score.");
                            W++;
                        }

                    }
                }
                // Multiple Pile Nim Code
                else if (gamenumber == "Multiple Pile Nim")
                {
                    Console.WriteLine("Multiple Pile Nim \n ----------------- \n");
                    //Creating the amount of tokens
                    Random ran = new();
                    int pilenumber = 0;
                    int currentNum1 = ran.Next(10, 20);
                    int currentNum2 = ran.Next(10, 20);
                    int currentNum3 = ran.Next(10, 20);

                    //The piles
                    int pile1 = currentNum1;
                    int pile2 = currentNum2;
                    int pile3 = currentNum3;

                    //Helps ai to play better and simplifies code a lot
                    int pile12 = currentNum1 + currentNum2;

                    //Int variables
                    int takeAmount1 = 0;
                    int takeAmount2 = 0;
                    int takeAmount3 = 0;
                    int maxTake1;
                    int maxTake2;
                    int maxTake3;
                    int whoseTurn = 1;

                    //Bools for ending the game
                    bool gameIsOver;
                    bool gameLoop = true;
                    bool validInput;


                    // Main Game Loop for multiple pile nim
                    if (gameLoop == true)
                    {
                        // Setup
                        gameIsOver = false;

                        Console.WriteLine("Multiple Pile Nim");

                        //Session Loop
                        while (!gameIsOver)
                        {
                            maxTake1 = Math.Min(5, currentNum1);
                            maxTake2 = Math.Min(5, currentNum2);
                            maxTake3 = Math.Min(5, currentNum3);
                            // Player's Turn
                            validInput = false;
                            whoseTurn = 1;
                            if (!validInput)
                            {
                                //Get an integer
                                while (true)
                                {
                                    Console.WriteLine("Remaining total from the first pile is: {0}", currentNum1);
                                    Console.WriteLine("Remaining total from the second pile is: {0}", currentNum2);
                                    Console.WriteLine("Remaining total from the third pile is: {0}", currentNum3);
                                    Console.WriteLine("Which pile do you want to take from? 1-3");
                                    int.TryParse(Console.ReadLine(), out pilenumber);
                                    //used to determine if you took from pile one
                                    if (pilenumber == 1)
                                    {
                                        Console.WriteLine("You are taking from pile one. How many tokens do you take (1 - {0})?", maxTake1);
                                        bool success1 = int.TryParse(Console.ReadLine(), out takeAmount1);
                                        if (success1)
                                        {
                                            if (takeAmount1 > 5 || takeAmount1 < 0)
                                            {
                                                takeAmount1 %= 6;
                                                if (takeAmount1 == 0)
                                                {
                                                    takeAmount1 = 5;
                                                }
                                            }
                                            takeAmount2 = 0;
                                            takeAmount3 = 0;
                                            break;
                                        }
                                        else
                                        {
                                            Console.WriteLine("Invalid amount!");
                                        }
                                        if (takeAmount1 > 0 && takeAmount1 <= maxTake1)
                                        {
                                            validInput = true;
                                        }

                                        else
                                        {
                                            Console.WriteLine("Invalid amount!\n");
                                            validInput = false;
                                        }
                                    }
                                    //Used to determine if you took from pile two
                                    else if (pilenumber == 2)
                                    {
                                        Console.WriteLine("You are taking from pile two. How many tokens do you take (1 - {0})?", maxTake2);
                                        bool success2 = int.TryParse(Console.ReadLine(), out takeAmount2);
                                        if (success2)
                                        {
                                            takeAmount1 = 0;
                                            if (takeAmount2 > 5 || takeAmount2 < 0)
                                            {
                                                takeAmount2 %= 6;
                                                if (takeAmount2 == 0)
                                                {
                                                    takeAmount2 = 5;
                                                }
                                            }
                                            takeAmount3 = 0;
                                            break;
                                        }
                                        else
                                        {
                                            Console.WriteLine("Invalid amount!");
                                        }
                                        if (takeAmount2 > 0 && takeAmount2 <= maxTake2)
                                        {
                                            validInput = true;
                                        }

                                        else
                                        {
                                            Console.WriteLine("Invalid amount!\n");
                                            validInput = false;
                                        }
                                    }
                                    //used to determine that you took from pile three
                                    else if (pilenumber == 3)
                                    {
                                        Console.WriteLine("You are taking from pile three. How many tokens do you take (1 - {0})?", maxTake3);
                                        bool success3 = int.TryParse(Console.ReadLine(), out takeAmount3);
                                        if (success3)
                                        {
                                            takeAmount1 = 0;
                                            takeAmount2 = 0;
                                            if (takeAmount3 > 5 || takeAmount3 < 0)
                                            {
                                                takeAmount3 %= 6;
                                                if (takeAmount3 == 0)
                                                {
                                                    takeAmount3 = 5;
                                                }
                                            }
                                            break;
                                        }
                                        else
                                        {
                                            Console.WriteLine("Invalid amount!");
                                        }
                                        if (takeAmount3 > 0 && takeAmount3 <= maxTake3)
                                        {
                                            validInput = true;
                                        }

                                        else
                                        {
                                            Console.WriteLine("Invalid amount!\n");
                                            validInput = false;
                                        }
                                    }
                                    else
                                    {
                                        Console.WriteLine("invalid pile");
                                    }
                                }
                            }
                            //Tells you how much you took
                            Console.WriteLine("You took from pile 1: {0}.\n", takeAmount1);
                            Console.WriteLine("You took from pile 2: {0}.\n", takeAmount2);
                            Console.WriteLine("You took from pile 3: {0}.\n", takeAmount3);
                            currentNum1 -= takeAmount1;
                            currentNum2 -= takeAmount2;
                            currentNum3 -= takeAmount3;
                            //Ends the game
                            if (currentNum1 <= 0 && currentNum2 <= 0 && currentNum3 <= 0)
                            {
                                gameIsOver = true;
                            }
                            else
                            {
                                //Computer's turn
                                whoseTurn = 2;
                                //This decide which two piles the AI takes from
                                if (pile12 > currentNum3)
                                {
                                    //This decides which pile out of the two piles to pick from
                                    if (currentNum1 > currentNum2)
                                    {
                                        //Determines how much to take from the pile
                                        takeAmount1 = Math.Max(1, currentNum1 + currentNum2 - currentNum3) % 6;
                                        if (takeAmount1 == 0)
                                        {
                                            takeAmount1 = 5;
                                        }
                                        takeAmount2 = 0;
                                        takeAmount3 = 0;
                                        Console.WriteLine("I will take from the first pile: {0}.\n", takeAmount1);
                                    }
                                    else if (currentNum2 > currentNum1)
                                    {
                                        takeAmount1 = 0;
                                        takeAmount2 = Math.Max(1, currentNum1 + currentNum2 - currentNum3) % 6;
                                        if (takeAmount2 == 0)
                                        {
                                            takeAmount2 = 0;
                                        }
                                        takeAmount3 = 0;
                                        Console.WriteLine("I will take from the second pile: {0}.\n", takeAmount2);
                                    }
                                    else
                                    {
                                        takeAmount1 = 1;
                                        takeAmount2 = 0;
                                        takeAmount3 = 0;
                                        Console.WriteLine("I will take from the first pile: {0}.\n", takeAmount1);
                                    }

                                }
                                else if (pile12 < currentNum3)
                                {

                                    if (currentNum3 > currentNum2)
                                    {
                                        takeAmount1 = 0;
                                        takeAmount2 = 0;
                                        takeAmount3 = Math.Max(1, currentNum3 - currentNum2 - currentNum1) % 6;
                                        if (takeAmount3 == 0)
                                        {
                                            takeAmount3 = 5;
                                        }
                                        Console.WriteLine("I will take from the third pile: {0}.\n", takeAmount3);
                                    }
                                    else
                                    {

                                    }
                                }
                                else
                                {
                                    if (currentNum1 != 0 && currentNum1 >= currentNum2 && currentNum1 >= currentNum3)
                                    {
                                        takeAmount1 = 1;
                                        takeAmount2 = 0;
                                        takeAmount3 = 0;
                                        Console.WriteLine("I will take from the first pile: {0}.\n", takeAmount1);
                                    }
                                    else if (currentNum2 != 0 && currentNum2 >= currentNum1 && currentNum2 >= currentNum3)
                                    {
                                        takeAmount1 = 0;
                                        takeAmount2 = 0;
                                        takeAmount3 = 1;
                                        Console.WriteLine("I will take from the second pile: {0}.\n", takeAmount2);
                                    }
                                    else
                                    {
                                        takeAmount1 = 0;
                                        takeAmount2 = 1;
                                        takeAmount3 = 0;
                                        Console.WriteLine("I will take {0}.\n", takeAmount2);
                                    }
                                }
                                currentNum1 -= takeAmount1;
                                currentNum2 -= takeAmount2;
                                currentNum3 -= takeAmount3;
                                //If a number goes negative, then it will take from another pile
                                if (currentNum1 < 0)
                                {
                                    if (currentNum2 < currentNum3)
                                    {
                                        currentNum3 += currentNum1;
                                        currentNum1 = 0;
                                    }
                                    else
                                    {
                                        currentNum2 += currentNum1;
                                        currentNum1 = 0;
                                    }
                                }
                                else if (currentNum2 < 0)
                                {
                                    if (currentNum1 < currentNum3)
                                    {
                                        currentNum3 += currentNum2;
                                        currentNum2 = 0;
                                    }
                                    else
                                    {
                                        currentNum1 += currentNum2;
                                        currentNum2 = 0;
                                    }
                                }
                                else if (currentNum3 < 0)
                                {
                                    if (currentNum1 < currentNum2)
                                    {
                                        currentNum2 += currentNum3;
                                        currentNum3 = 0;
                                    }
                                    else
                                    {
                                        currentNum1 += currentNum3;
                                        currentNum3 = 0;
                                    }
                                }
                                if (currentNum1 == 0 && currentNum2 == 0 && currentNum3 == 0)
                                {
                                    //Ends the game and tells you the winner
                                    gameIsOver = true;
                                    if (whoseTurn == 1)
                                    {
                                        Console.WriteLine("I win, you loose.");
                                        Console.WriteLine("Please pick a new game, Zookkooz, Single Pile Nim, Multiple Pile Nim, or see your Score.");
                                        L++;
                                    }
                                    else
                                    {
                                        Console.WriteLine("I loose, you win.");
                                        Console.WriteLine("Please pick a new game, Zookkooz, Single Pile Nim, Multiple Pile Nim, or see your Score.");
                                        W++;
                                    }
                                }
                            }
                        }
                    }
                }
                //Main Game loop for Zookkooz
                else if (gamenumber == "Zookkooz")
                {
                    //Explains the game
                    bool gameloop = true;
                    Console.WriteLine("Find the hidden item and say (victory) three times to win, but if you don't have it you DIE.");
                    Console.WriteLine(startingPoint.getName() + Environment.NewLine + startingPoint.getDescription());
                    while (gameloop == true)
                    {
                        //Allows the person to move
                        gamenumber = Console.ReadLine();
                        if (gamenumber == "look")
                        {
                            Console.WriteLine("You see some stars");
                            countMistakes++;
                            a = 5;
                        }
                        else if (gamenumber == "n" || gamenumber == "N")
                        {
                            x++;
                            countMistakes++;
                            a = 5;
                        }
                        else if (gamenumber == "s" || gamenumber == "S")
                        {
                            x--;
                            countMistakes++;
                            a = 5;
                        }
                        else if (gamenumber == "w" || gamenumber == "W")
                        {
                            y++;
                            countMistakes++;
                            a = 5;
                        }
                        else if (gamenumber == "e" || gamenumber == "E")
                        {
                            y--;
                            countMistakes++;
                            a = 5;
                        }
                        else if (gamenumber == "ne" || gamenumber == "NE")
                        {
                            y--;
                            x++;
                            countMistakes++;
                            a = 5;
                        }
                        else if (gamenumber == "nw" || gamenumber == "NW")
                        {
                            y++;
                            x++;
                            countMistakes++;
                            a = 5;
                        }
                        else if (gamenumber == "se" || gamenumber == "SE")
                        {
                            y--;
                            x--;
                            countMistakes++;
                            a = 5;
                        }
                        else if (gamenumber == "sw" || gamenumber == "SW")
                        {
                            y++;
                            x--;
                            a = 5;
                            countMistakes++;
                        }
                        else if (gamenumber == "pick up chicken")
                        {
                            Console.WriteLine("You pick up the chicken");
                            countMistakes++;
                            chicken = true;
                        }
                        else if (x == 0 & y == 1 & gamenumber == "enter house")
                        {
                            Console.WriteLine("You enter the house");
                            countMistakes++;
                            x++;
                            y++;
                        }
                        else if (x == 1 & y == 2 & gamenumber == "leave house")
                        {
                            Console.WriteLine("You leave the house.");
                            countMistakes++;
                            x--;
                            y--;
                        }
                        else if (x == 1 & y == 2 & Console.ReadLine() != "leave house" & Console.ReadLine() != "victory")
                        {
                            Console.WriteLine("You must (leave house) first.");
                            countMistakes++;
                        }
                        else if (x == 2 & y == 1 & gamenumber == "Pick up pizza")
                        {
                            pizza = true;
                            a = 5;
                        }
                        else if (x == 2 & y == 1 & gamenumber == "Eat pizza")
                        {
                            if (pizza == true)
                            {
                                a = 5;
                                pizzaeaten++;
                            }
                            else
                            {
                                Console.WriteLine("Need to pick up pizza first.");
                                a = 5;
                            }
                        }
                        else if (pizzaeaten >= 5)
                        {
                            Console.WriteLine("You loose, died from eating too much.");
                            Console.WriteLine("Please pick a new game, Zookkooz, Single Pile Nim, Multiple Pile Nim, or see your Score.");
                            L++;
                        }
                        else if (chicken = true & gamenumber == "victory")
                        {
                            Console.WriteLine("You win");
                            Console.WriteLine("Please pick a new game, Zookkooz, Single Pile Nim, Multiple Pile Nim, or see your Score.");
                            W++;
                            gameloop = false;
                        }
                        else if (chicken = false & gamenumber == "victory")
                        {
                            Console.WriteLine("YOU LOOSE, try to find the hidden item to win.");
                            Console.WriteLine("Please pick a new game, Zookkooz, Single Pile Nim, Multiple Pile Nim, or see your Score.");
                            L++;
                            gameloop = false;
                        }
                        else if (x == 3 & y == 2 & gamenumber == "teleport")
                        {
                            x = 1;
                            y = 2;
                            countMistakes++;
                            a = 5;
                        }
                        else
                        {
                            Console.WriteLine("Invalid Action");
                            countMistakes++;
                            a = 5;
                        }
                        //Makes you loose if you take too many actions
                        if (countMistakes >= 20 & chicken == false)
                        {
                            Console.WriteLine("YOU LOOSE, took too many actions before winning.");
                            Console.WriteLine("Please pick a new game, Zookkooz, Single Pile Nim, Multiple Pile Nim, or see your Score.");
                            L++;
                            gameloop = false;
                        }
                        else if (countMistakes >= 20 & chicken == true)
                        {
                            Console.WriteLine("You had the secret item, but never said victory so you loose.");
                            L++;
                            gameloop = false;
                        }
                        //Room loop so once you move it will say the location and describe it
                        while (a != 0)
                        {
                            //Tells the person where they are
                            if (x == 0 & y == 0)
                            {
                                Console.WriteLine(r1.getName() + Environment.NewLine + r1.getDescription());
                                a = 0;
                            }
                            else if (x == -1 & y >= 0)
                            {
                                Console.WriteLine("Impassable area, so you head back.");
                                x++;
                                a = 0;
                            }
                            else if (x >= 0 & y == -1)
                            {
                                Console.WriteLine("Impassable area, so you head back.");
                                y++;
                                a = 0;
                            }
                            else if (x <= -1 & y <= -1)
                            {
                                Console.WriteLine("Impassable area, so you head back.");
                                x++;
                                y++;
                                a = 0;
                            }
                            else if (x == 1 & y == 1)
                            {
                                Console.WriteLine(r4.getName() + Environment.NewLine + r4.getDescription());
                                a = 0;
                            }
                            else if (x == 1 & y == 0)
                            {
                                Console.WriteLine(r2.getName() + Environment.NewLine + r2.getDescription());
                                a = 0;
                            }
                            else if (x == 0 & y == 1)
                            {
                                Console.WriteLine(r3.getName() + Environment.NewLine + r3.getDescription());
                                a = 0;
                            }
                            else if (x == 0 & y == 2)
                            {
                                Console.WriteLine(r5.getName() + Environment.NewLine + r5.getDescription());
                                a = 0;
                            }
                            else if (x == 1 & y == 2)
                            {
                                Console.WriteLine(r6.getName() + Environment.NewLine + r6.getDescription());
                                a = 0;
                            }
                            else if (x == 2 & y == 2)
                            {
                                Console.WriteLine(r7.getName() + Environment.NewLine + r7.getDescription());
                                a = 0;
                            }
                            else if (x == 2 & y == 0)
                            {
                                Console.WriteLine(r8.getName() + Environment.NewLine + r8.getDescription());
                                a = 0;
                            }
                            else if (x == 2 & y == 1)
                            {
                                Console.WriteLine(r9.getName() + Environment.NewLine + r9.getDescription());
                                a = 0;
                            }
                            else if (x == 0 & y == 3)
                            {
                                Console.WriteLine(r10.getName() + Environment.NewLine + r10.getDescription());
                                a = 0;
                            }
                            else if (x == 1 & y == 3)
                            {
                                Console.WriteLine(r11.getName() + Environment.NewLine + r11.getDescription());
                                a = 0;
                            }
                            else if (x == 2 & y == 3)
                            {
                                Console.WriteLine(r12.getName() + Environment.NewLine + r12.getDescription());
                                a = 0;
                            }
                            else if (x == 3 & y == 3)
                            {
                                Console.WriteLine(r13.getName() + Environment.NewLine + r3.getDescription());
                                a = 0;
                            }
                            else if (x == 3 & y == 0)
                            {
                                Console.WriteLine(r14.getName() + Environment.NewLine + r14.getDescription());
                                a = 0;
                            }
                            else if (x == 3 & y == 1)
                            {
                                Console.WriteLine(r15.getName() + Environment.NewLine + r15.getDescription());
                                a = 0;
                            }
                            else if (x == 3 & y == 2)
                            {
                                Console.WriteLine(r16.getName() + Environment.NewLine + r16.getDescription());
                                a = 0;
                            }
                            else
                            {
                                //If you are lucky it will bring you to the chicken allowing you to win, or you will be taken to the library
                                Random ran = new();
                                int luck = ran.Next(0, 10);
                                if (3 < luck || 7 > luck)
                                {
                                    Console.WriteLine("You were walking back and got lost, there is a chicken here.");
                                    x = 1;
                                    y = 2;
                                    a = 0;
                                }
                                else
                                {
                                    //You walked too far away, so it sets you back to the library
                                    Console.WriteLine("You got tired so you head back to the library and rest. Where do you want to go or do now?");
                                    x = 0;
                                    y = 0;
                                    a = 0;
                                }
                            }
                        }
                    }
                }
                //Scoring
                else if (gamenumber == "Score")
                {
                    Console.WriteLine("Your win rate is {0}", W);
                    Console.WriteLine("Your loss rate is {0}", L);
                    Console.WriteLine("Type in another game. Your options are Single Pile Nim, Multuple Pile Nim, or Zookkooz.");
                }
                else if (gamenumber == "PickaPath")
                {
                    while (a == 0)
                    {
                        Page[] myBook = new Page[250];
                        int currentPage = 1;
                        //this creates all of the blank pages
                        for (int i = 0; i < myBook.Length; i++)
                        {
                            myBook[i] = new Page();

                            //this runs the write book method
                            //and fills the pages with text
                            writeBook();

                            //this runs the makeMove method which
                            //puts the text on the screen
                            makeMove();
                        }
                        void writeBook()
                        {
                            //lets create five pages  
                            myBook[0] = new Page(); //inside cover
                            myBook[1] = new Page(1, "Welcome to the volcano resort! It is big and scary. \n" +
                            "Would you like to climb the volcano and see what is in it (page 103), go back to the resort(3), or look around and see what is to see(4)?", 2, 3);
                            myBook[103] = new Page(103, "You watch as the volcano starts to erupt. Any last words? \n" +
                            " Say last words (page 101)", 101, 101);
                            myBook[3] = new Page(3, "You notice a path going into a forest when walking back to the resort. Continue back to the resort (102) or go on the path (25).", 4, 5);
                            myBook[4] = new Page(4, "After walking around you noticed you could walk around the base of the mountain(6), follow a path into the forest (25), or wander into the forest without following a path(100)", 102, 25);
                            myBook[6] = new Page(6, "You walk around the base of the mountain then. You can go back to the resort (102) or wander into the forest (100)", 107, 192);
                            myBook[100] = new Page(100, "You see a sleeping lion in the forest. You can watch the lion sleep (50), walk away slowly and quietly (7), or plank on the lion (90)", 50, 50);
                            myBook[50] = new Page(50, "The lion wakes up and sees you, then it eats you.", 72, 56);
                            myBook[7] = new Page(70, "You escaped the lion, but then you hear rumbling and you notice the volcano erupted. Go back and try to plank on the lion(90) or run deeper into the forest(5)", 93, 27);
                            myBook[90] = new Page(90, "You got eaten by the lion and got yourself a darwin award for your death.", 103, 17);
                            myBook[102] = new Page(102, "You hear rumbling and molten rock from the volcano shoots out into the sky. One of those rocks hit you and you are now dead.", 190, 190);
                            myBook[25] = new Page(25, "You notice the volcano erupts, thankfully you are far enough away that you could escape. You live today with everything that you have done destroyed even your home and family, but you are still alive.", 197, 197);
                            myBook[101] = new Page(101, "The volcano burns you to ash.", 200, 200);
                            myBook[26] = new Page(13, "You died in your sleep due to the lion", 14, 51);
                            myBook[8] = new Page(8, "Due to lack of sleep and dehydration you thought that the forest fire was your home and so you ran into the fire never to be seen again.", 17, 63);
                            myBook[5] = new Page(97, "You ran into the woods and now it is night, but you are very thirsty and hungry. Sleep without a shelter (26) or continue walking without sleep in order to find food, water, and shelter (8)", 83, 13);
                        } //end write book
                        void makeMove()
                        {
                            int currentPage = Console.ReadLine();
                            if (currentPage < 101 && currentPage != 25)
                            {
                                Console.WriteLine(myBook[currentPage].getDescription());
                                if (currentPage < 25 && currentPage != 7 && currentPage != 8 && currentPage != 5)
                                {
                                    Console.WriteLine(Environment.NewLine + "What would you like to do?");
                                }
                                else if (currentPage == 5)
                                {
                                    Console.WriteLine(Environment.NewLine + "What would you like to do?");
                                }
                                else if (currentPage == 7)
                                {
                                    Console.WriteLine(Environment.NewLine + "What would you like to do?");
                                }
                                else if (currentPage == 8)
                                {
                                    Console.WriteLine(Environment.NewLine + "Type in 1 to restart!");
                                    death++;
                                }
                                else if (currentPage > 25 && currentPage != 90 && currentPage != 100 && currentPage != 26)
                                {
                                    Console.WriteLine(Environment.NewLine + "Type in 1 to restart!");
                                    death++;
                                }
                                else if (currentPage == 90)
                                {
                                    Console.WriteLine(Environment.NewLine + "Type in 1 to restart!");
                                    death++;
                                }
                                else if (currentPage == 100)
                                {
                                    Console.WriteLine(Environment.NewLine + "What would you like to do?");
                                }
                                else if (currentPage == 26)
                                {
                                    Console.WriteLine(Environment.NewLine + "Type in 1 to restart!");
                                    death++;
                                }
                            }

                            else if (currentPage == 25)
                            {
                                Console.WriteLine(myBook[currentPage].getDescription());
                            }
                            currentPage = Console.ReadLine();
                            else
                            {
                                Console.WriteLine(myBook[currentPage].getDescription() + Environment.NewLine + "Type in 1 to restart!");
                            }
                            currentPage = Int32.Parse(Console.ReadLine());
                        } //end make move
                    }
                }
                //Incase of a mistype or invalid game
                else
                {
                    Console.WriteLine("Invalid game or mistyped. Please try it again, your choices are Single Pile Nim, Multuple Pile Nim, Zookooz, or see your Score");
                }
            }
        }
    }
}
